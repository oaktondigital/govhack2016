<!doctype html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7 lang="en""> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8 lang="en""> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9 lang="en""> <![endif]-->
<!--[if IE 9]>         <html class="no-js lt-ie10 lang="en""> <![endif]-->
<html class="no-js" lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title></title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Place favicon.ico in the root directory -->

    <!-- build:css css/styles.min.css -->
    <link rel="stylesheet" href="css/styles.css">
    <link rel="stylesheet" href="bower_components/components-font-awesome/css/font-awesome.min.css">
    <!-- endbuild -->

</head>

<body>
    <div id="container"></div>
    <script type="text/javascript" src="js/awe-loader-min.js"></script>
    <script type="text/javascript">
        window.addEventListener('load', function() {


            window.awe.init({
                // automatically detect the device type
                device_type: awe.AUTO_DETECT_DEVICE_TYPE,
                // populate some default settings
                settings: {
                    container_id: 'container',
                    fps: 30,
                    default_camera_position: {
                        x: 0,
                        y: 0,
                        z: 0
                    },
                    default_lights: [{
                        id: 'point_light',
                        type: 'point',
                        color: 0xFFFFFF
                    }, ],
                },
                ready: function() {
                    // load js files based on capability detection then setup the scene if successful
                    awe.util.require([{
                        capabilities: ['gum', 'gyro', 'webgl'],
                        files: [
                            ['js/awe-standard-dependencies.js', 'js/awe-standard.js'], // core dependencies for this app
                            'js/awe-standard-window_resized.js', // window resize handling plugin
                            'js/awe-standard-object_clicked.js', // object click/tap handling plugin
                            'js/awe.geo_ar.js', // geo ar plugin
                        ],
                        success: function() {
                            // limit demo to supported devices
                            // NOTE: only Chrome and Firefox has implemented the DeviceOrientation API in a workable way
                            //       so for now we are excluding all others to make sure your first experience is a happy one
                            var device_type = awe.device_type();
                            var browser_unsupported = false;
                            if (device_type != 'android') {
                                browser_unsupported = true;
                            } else if (!navigator.userAgent.match(/chrome|firefox/i)) {
                                browser_unsupported = true;
                            }
                            if (browser_unsupported) {
                                document.getElementById('container').innerHTML += '<p>This demo currently requires a standards compliant Android browser (e.g. Chrome M33).</p>';
                                return;
                            }
                            // setup and paint the scene
                            window.awe.setup_scene();
                            // setup some code to handle when an object is clicked/tapped
                            window.addEventListener('object_clicked', function(e) {
                                var p = awe.projections.view(e.detail.projection_id);
                                awe.projections.update({ // rotate clicked object by 180 degrees around x and y axes over 10 seconds
                                    data: {
                                        animation: {
                                            duration: 10,
                                        },
                                        rotation: {
                                            y: p.rotation.y + 180,
                                            x: p.rotation.x + 180
                                        }
                                    },
                                    where: {
                                        id: e.detail.projection_id
                                    }
                                });
                            }, false);
                            // add some points of interest (poi) for each of the compass points
                            // awe.pois.add({ id:'north', position: { x:0, y:0, z:200 } });
                            // awe.pois.add({ id:'north_east', position: { x:200, y:0, z:200 } });
                            // awe.pois.add({ id:'east', position: { x:200, y:0, z:0 } });
                            // awe.pois.add({ id:'south_east', position: { x:200, y:0, z:-200 } });
                            // awe.pois.add({ id:'south', position: { x:0, y:0, z:-200 } });
                            awe.pois.add({
                                id: 'south_west',
                                position: {
                                    x: -200,
                                    y: 0,
                                    z: -200
                                }
                            });

                            var url = 'https://sheltered-caverns-42351.herokuapp.com/creatures';

                            function getPositionAndCreature() {
                                if (navigator.geolocation) {
                                    navigator.geolocation.getCurrentPosition(function(position) {
                                        var position = {
                                            lat: position.coords.latitude,
                                            lng: position.coords.longitude
                                        };
                                        getCreature(position);
                                    }, function() {
                                        // handleLocationError(true, infoWindow, map.getCenter());
                                    });
                                } else {
                                    // Browser doesn't support Geolocation
                                    //handleLocationError(false, infoWindow, map.getCenter());
                                }
                            }

                            function addCreature(creatureImage) {
                                awe.projections.add({
                                    id: 'sw',
                                    geometry: {
                                        shape: 'cube',
                                        x: 50,
                                        y: 50,
                                        z: 1
                                    },
                                    scale: {
                                        x: 2,
                                        y: 2,
                                        z: 2
                                    },
                                    rotation: {
                                        x: 0,
                                        y: 45,
                                        z: 0
                                    },
                                    texture: {
                                        path: creatureImage
                                    },
                                    material: {
                                        type: 'phong'
                                    }
                                }, {
                                    poi_id: 'south_west'
                                });
                            }

                            function getCreature(position) {
                                if (!position)
                                    return;

                                var localUrl = url + '/' + position.lat + '/' + position.lng;
                                var myHeaders = new Headers();
                                var myInit = {
                                    method: 'GET',
                                    headers: myHeaders,
                                    mode: 'cors',
                                    cache: 'default'
                                };

                                fetch(localUrl, myInit)
                                    .then(data => data.json())
                                    .then(json => getImage(json.data))
                                    .then(image => addCreature(image))
                                    .catch(e => {
                                        console.log("e", e);
                                        addCreature(getImage("wombat"));
                                    })

                            }

                            function getImage(animal) {
                                switch (animal.toLowerCase()) {
                                    case 'wombat':
                                        return 'img/wombat.png';
                                        break;
                                    default:
                                        return 'img/wombat.png';
                                }
                            }

                            getPositionAndCreature();


                        },
                    }, { // else create a fallback
                        capabilities: [],
                        files: [],
                        success: function() {
                            document.getElementById('container').innerHTML =
                                '<p>This demo currently requires a standards compliant mobile browser (e.g. Firefox on Android). NOTE: iOS does not currently support WebGL or WebRTC and has not implemented the DeviceOrientation API correctly. Please see <a href="http://lists.w3.org/Archives/Public/public-geolocation/2014Jan/0000.html">this post to the W3C GeoLocation Working Group</a> for more detailed information.</p>';
                            return;
                        },
                    }, ]);
                }
            });
        });
    </script>
    <!--build:js js/jquery.min.js -->
    <script src="bower_components/jquery/dist/jquery.min.js"></script>
    <!-- endbuild -->
    <!--build:js js/main.min.js -->
    <script src="js/main.js"></script>
    <!-- endbuild -->
    <div class="closebutton">
        <a href="index.html"><i class="fa fa-times"></i></a>
    </div>
    <script src="http://192.168.1.106:8081/target/target-script-min.js#anonymous"></script>

</body>

</html>
